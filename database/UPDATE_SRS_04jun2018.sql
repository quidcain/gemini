  CREATE OR REPLACE VIEW VW_NEED_APPROVAL_SCHOOLS AS
  SELECT
    S.SCHOOL_ID,
    S.EXT_SCHOOL_NUMBER,
    S.CAMPUS_ID                           AS DISTRICT_ID,
    C.DESCRIPTION                         AS DISTRICT_NAME,
    C.DISTRICT_ZONE_ID                    AS REGION_ID,
    D.DESCRIPTION                         AS REGION_NAME,
    S.SCHOOL_NAME,
    --ET.VALUE                              AS SCHOOL_TYPE_CD,
    --ET.DESCRIPTION                        AS SCHOOL_TYPE,
    S.ADDRESS_LINE_1,
    S.ADDRESS_LINE_2,
    CC.VALUE                              AS CITY_CD,
    CC.DESCRIPTION                        AS CITY,
    S.COUNTRY,
    S.STATE,
    S.ZIP_CODE,
    S.EMAIL,
    (S.PHONE_AREA_CODE || S.PHONE_NUMBER) AS PHONE
  FROM SY_SCHOOL S
    INNER JOIN SY_CAMPUS C ON S.CAMPUS_ID = C.CAMPUS_ID AND C.IS_ACTIVE_IND = 1
    INNER JOIN SY_DISTRICT_ZONE D ON C.DISTRICT_ZONE_ID = D.DISTRICT_ZONE_ID AND D.IS_ACTIVE_IND = 1
    --INNER JOIN ENUM_SY_SCHOOL_TYPE ET ON S.SCHOOL_TYPE_CD = ET.VALUE
    INNER JOIN ENUM_CE_COUNTY_CODE CC ON S.COUNTY_CD = CC.VALUE AND CC.IS_ACTIVE_IND = 1
  WHERE S.SCHOOL_ID NOT IN(15808,15872,16211,16557,16454, 16720,17037,16908,17171,19811)
  AND S.SCHOOL_ID IN (select SCHOOL_ID from SY_SCHOOL_DIRECTORY_2019
where school_clasification NOT IN ('ESCUELAS REGULARES', 'SHARED'))
and S.SCHOOL_ID NOT IN (SELECT SCHOOL_ID FROM SY_SCHOOLS_CLOSED_2018_2019);




CREATE OR REPLACE VIEW VW_NEED_APPROVAL_STUDENTS AS
  SELECT
P.ID AS PRE_ENROLLMENT_ID
, 0 AS OCCUPATIONAL_ENROLLMENT
,s.sis_student_id
,C.FIELD_16 AS Impedimento
,P.GRADE_LEVEL
,S.FIRST_NAME
,S.MIDDLE_NAME
, S.LAST_NAME
, S.DATE_OF_BIRTH
, P.REQUEST_STATUS
, P.REASON_TO_DENY_ENROLLMENT
, COALESCE(P.RESULT_SCHOOL_ID, PA1.SCHOOL_ID, (CASE WHEN P.SCHOOL_ID IS NULL OR P.SCHOOL_ID < 0 THEN NULL ELSE  P.SCHOOL_ID END)) AS COALESCE_SCHOOL_ID_1
, NULL/*COALESCE(P.RESULT_SCHOOL_ID, PA2.SCHOOL_ID, (CASE WHEN P.SCHOOL_ID IS NULL OR P.SCHOOL_ID < 0 THEN NULL ELSE  P.SCHOOL_ID END))*/ AS COALESCE_SCHOOL_ID_2
, P.RESULT_SCHOOL_ID
, P.SCHOOL_ID
, PA1.SCHOOL_ID AS SCHOOL_ID_1
, PA2.SCHOOL_ID AS SCHOOL_ID_2
, (CASE WHEN P.SCHOOL_ID IN (SELECT SCHOOL_ID FROM VW_NEED_APPROVAL_SCHOOLS) THEN  1 ELSE 0 END) AS OPTION_0
, (CASE WHEN PA1.SCHOOL_ID IN (SELECT SCHOOL_ID FROM VW_NEED_APPROVAL_SCHOOLS) THEN  1 ELSE 0 END) AS OPTION_1
, (CASE WHEN PA2.SCHOOL_ID IN (SELECT SCHOOL_ID FROM VW_NEED_APPROVAL_SCHOOLS) THEN  1 ELSE 0 END) AS OPTION_2
, S.EXT_SCHOOL_NUMBER AS ORIGIN_SCHOOL_NUMBER
, S.SCHOOL_NAME AS ORIGIN_SCHOOL_NAME
FROM PRE_ENROLLMENT_REQUESTS P
INNER JOIN STUDENTS S ON S.ID = P.STUDENT_ID
LEFT JOIN TMP_ST_ENROLLMENT_2019_BK TM ON TM.STUDENT_ID = S.SIS_STUDENT_ID
LEFT JOIN ST_ENROLLMENT E ON E.ENROLLMENT_ID = TM.ENROLLMENT_ID
LEFT JOIN SY_SCHOOL S ON E.SCHOOL_ID = S.SCHOOL_ID
LEFT JOIN SY_FLEX_DATA C ON (S.SIS_STUDENT_ID = C.TYPE_ID AND C.FLEX_OWNER_ID=603)
LEFT JOIN PRE_ENROLLMENT_ALT_SCHOOLS PA1 ON PA1.PRE_ENROLLMENT_ID = P.ID AND PA1.PRIORITY = 1
LEFT JOIN PRE_ENROLLMENT_ALT_SCHOOLS PA2 ON PA2.PRE_ENROLLMENT_ID = P.ID AND PA2.PRIORITY = 2
WHERE P.TYPE <> 'OCCUPATIONAL' AND P.REQUEST_STATUS <> 'ACTIVE' AND (P.SCHOOL_ID IN (SELECT SCHOOL_ID FROM VW_NEED_APPROVAL_SCHOOLS)
OR PA1.SCHOOL_ID IN (SELECT SCHOOL_ID FROM VW_NEED_APPROVAL_SCHOOLS)
OR PA2.SCHOOL_ID IN (SELECT SCHOOL_ID FROM VW_NEED_APPROVAL_SCHOOLS)
OR P.RESULT_SCHOOL_ID IN (SELECT SCHOOL_ID FROM VW_NEED_APPROVAL_SCHOOLS))

UNION

SELECT
P.ID AS PRE_ENROLLMENT_ID
, 1 AS OCCUPATIONAL_ENROLLMENT
,S.SIS_STUDENT_ID
,C.FIELD_16 AS IMPEDIMENTO
,P.GRADE_LEVEL
,S.FIRST_NAME
,S.MIDDLE_NAME
, S.LAST_NAME
, S.DATE_OF_BIRTH
, P.REQUEST_STATUS
, P.REASON_TO_DENY_ENROLLMENT
, COALESCE(P.RESULT_SCHOOL_ID, PV.SCHOOL_ID) AS COALESCE_SCHOOL_ID_1
, NULL AS COALESCE_SCHOOL_ID_2
, P.RESULT_SCHOOL_ID
, P.SCHOOL_ID
, NULL AS SCHOOL_ID_1
, NULL AS SCHOOL_ID_2
, NULL AS OPTION_0
, NULL AS OPTION_1
, NULL AS OPTION_2
, S.EXT_SCHOOL_NUMBER AS ORIGIN_SCHOOL_NUMBER
, S.SCHOOL_NAME AS ORIGIN_SCHOOL_NAME

FROM (SELECT DISTINCT PRE_ENROLLMENT_ID, SCHOOL_ID FROM PRE_ENROLLMENT_VOC_SCHOOLS) PV
INNER JOIN PRE_ENROLLMENT_REQUESTS P  ON PV.PRE_ENROLLMENT_ID = P.ID
INNER JOIN STUDENTS S ON S.ID = P.STUDENT_ID
LEFT JOIN TMP_ST_ENROLLMENT_2019_BK TM ON TM.STUDENT_ID = S.SIS_STUDENT_ID
LEFT JOIN ST_ENROLLMENT E ON E.ENROLLMENT_ID = TM.ENROLLMENT_ID
LEFT JOIN SY_SCHOOL S ON E.SCHOOL_ID = S.SCHOOL_ID
LEFT JOIN SY_FLEX_DATA C ON (S.SIS_STUDENT_ID = C.TYPE_ID AND C.FLEX_OWNER_ID=603)
WHERE P.TYPE = 'OCCUPATIONAL' AND P.REQUEST_STATUS <> 'ACTIVE' AND PV.SCHOOL_ID IN (SELECT SCHOOL_ID FROM VW_NEED_APPROVAL_SCHOOLS);


CREATE VIEW VW_CONFIRMED_CAPS AS
SELECT GL.*, RE.CONFIRMED_MAX_CAPACITY FROM SY_SCHOOL_GRADE_LIMITS GL
LEFT JOIN (SELECT ROW_NUMBER() OVER (PARTITION BY SCHOOL_ID, GRADE_LEVEL ORDER BY ID DESC) AS ROW_NUMBER
,SCHOOL_ID
, GRADE_LEVEL
, CONFIRMED_MAX_CAPACITY
FROM SCHOOL_GRADE_LIMIT_REQUEST) RE ON RE.SCHOOL_ID = GL.SCHOOL_ID AND RE.GRADE_LEVEL = GL.GRADE_LEVEL


UPDATE SY_SCHOOL_GRADE_LIMITS GL
SET MAX_CAPACITY = (SELECT CONFIRMED_MAX_CAPACITY FROM TMP_CAPACITY_GREATER_THAN_DE DE WHERE DE.SCHOOL_GRADE_LIMIT_ID = GL.SCHOOL_GRADE_LIMIT_ID),
REVISION_USER_ID = (SELECT USER_ID FROM TMP_CAPACITY_GREATER_THAN_DE DE WHERE DE.SCHOOL_GRADE_LIMIT_ID = GL.SCHOOL_GRADE_LIMIT_ID),
REVISION_DATE = SYSDATE
WHERE SCHOOL_GRADE_LIMIT_ID IN (SELECT SCHOOL_GRADE_LIMIT_ID FROM TMP_CAPACITY_GREATER_THAN_DE)

DROP TABLE TMP_CAPACITY_GREATER_THAN_DE
CREATE TABLE TMP_CAPACITY_GREATER_THAN_DE AS
select
SCHOOL_GRADE_LIMIT_ID,
CONFIRMED_MAX_CAPACITY,
USER_ID
FROM VW_CONFIRMED_CAPS C
WHERE CONFIRMED_MAX_CAPACITY > MAX_CAPACITY

