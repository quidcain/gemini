CREATE OR REPLACE VIEW VW_ADMIN_SEC_USER AS
  SELECT
    A.SEC_USER_ID    AS USER_ID,
    A.PASSWORD_VALUE AS "PASSWORD",
    F.INACTIVE_BASE_DATE,
    F.LAST_LOGIN_TIME,
    A.LOGIN_NAME     AS "USERNAME",
    B.STAFF_ID,
    B.FIRST_NAME,
    B.MIDDLE_NAME,
    B.LAST_NAME,
    B.IS_ACTIVE_IND
  FROM SEC_USER A
    INNER JOIN SY_STAFF B ON A.PARTY_ID = B.STAFF_ID
    INNER JOIN SEC_USER_XREF C ON A.SEC_USER_ID = C.SEC_USER_ID
    INNER JOIN SEC_USER_ACCESS_LOG F ON A.SEC_USER_ID = F.SEC_USER_ID
  WHERE A.STATUS = 1 AND B.IS_ACTIVE_IND = 1
        AND C.PARTY_TYPE_CD = 1 AND EXISTS(SELECT 1
                                           FROM VW_ADMIN_SEC_ROLE R
                                           WHERE R.USER_ID = A.SEC_USER_ID);

CREATE OR REPLACE VIEW VW_ADMIN_SEC_ROLE AS
  SELECT
    D.SEC_USER_ID      AS USER_ID,
    D.SEC_ROLE_ID      AS ROLE_ID,
    D.SEC_GROUP_ID     AS GROUP_ID,
    E.DISTRICT_ZONE_ID AS REGION_ID,
    E.CAMPUS_ID        AS DISTRICT_ID,
    E.SCHOOL_ID,
    (CASE
     WHEN E.SEC_GROUP_ID = 0
       THEN 0
     WHEN E.DISTRICT_ZONE_ID IS NOT NULL AND E.DISTRICT_ZONE_ID > 0
       THEN 1
     ELSE 2
     END)              AS PRECEDENCE
  FROM SEC_USER_GROUP_ROLE D
    INNER JOIN SEC_GROUP_XREF E ON D.SEC_GROUP_ID = E.SEC_GROUP_ID
  WHERE D.SEC_ROLE_ID IN (3641, 5163, 2660, 5645, 5985, 6928, 2620, 6625, 3642)
        AND ((E.SCHOOL_ID IS NOT NULL AND E.SCHOOL_ID > 0 AND EXISTS(SELECT 1
                                                                     FROM SY_SCHOOL S
                                                                     WHERE
                                                                       IS_ACTIVE_IND = 1 AND E.SCHOOL_ID = S.SCHOOL_ID))
             OR E.SCHOOL_ID IS NULL)
  ORDER BY SEC_USER_ID, PRECEDENCE;

CREATE OR REPLACE VIEW VW_DASH_PRE_ENROLLMENTS AS
SELECT
  P.SUBMIT_DATE,
  P.TYPE,
  'PRE_ENROLL_REC' AS STAT_TYPE,
  P.REGION_ID,
  P.MUNICIPALITY_CODE AS CITY_CODE,
  P.SCHOOL_ID,
  S.ENTRY_TYPE
FROM PRE_ENROLLMENT_REQUESTS P
  INNER JOIN STUDENTS S ON S.ID = P.STUDENT_ID
WHERE SUBMIT_DATE IS NOT NULL

UNION

SELECT
  P.SUBMIT_DATE,
  P.TYPE,
  'OPTIONAL_REC' AS STAT_TYPE,
  SC.REGION_ID,
  SC.CITY_CD AS CITY_CODE,
  P.OPTIONAL_SCHOOL_ID,
  S.ENTRY_TYPE
FROM PRE_ENROLLMENT_REQUESTS P
  INNER JOIN STUDENTS S ON S.ID = P.STUDENT_ID
  INNER JOIN VW_SCHOOLS SC ON P.OPTIONAL_SCHOOL_ID = SC.SCHOOL_ID
WHERE SUBMIT_DATE IS NOT NULL AND OPTIONAL_SCHOOL_ID > 0;

CREATE OR REPLACE VIEW VW_ENROLLMENT_PROGRESS AS
  SELECT
  TO_CHAR(SUBMIT_DATE, 'yyyymmdd') AS ACTION_DATE,
  REGION_ID,
  CITY_CODE,
  SCHOOL_ID,
  SUM(CASE WHEN TYPE IN('REGULAR' , 'OCCUPATIONAL') AND ENTRY_TYPE = 'EXISTING' THEN 1 ELSE 0 END) CONFIRMADOS,
  SUM(CASE WHEN TYPE IN ('REGULAR_ALTERNATE_SCHOOLS', 'OCCUPATIONAL') AND ENTRY_TYPE = 'NEW' THEN 1 ELSE 0 END) NUEVO_INGRESO,
  SUM(CASE WHEN TYPE  IN ('REGULAR_ALTERNATE_SCHOOLS') AND ENTRY_TYPE = 'EXISTING' AND STAT_TYPE = 'PRE_ENROLL_REC' THEN 1 ELSE 0 END) RECHAZADOS
FROM VW_DASH_PRE_ENROLLMENTS
GROUP BY TO_CHAR(SUBMIT_DATE, 'yyyymmdd') , REGION_ID, CITY_CODE, SCHOOL_ID;

CREATE OR REPLACE VIEW VW_ST_ENROLLMENT_COUNT AS
SELECT S.REGION_ID, S.CITY_CD AS CITY_CODE, S.SCHOOL_ID, COUNT(*) AS TOTAL
FROM TMP_ST_ENROLLMENT_2019 ST
  INNER JOIN VW_SCHOOLS S ON ST.SCHOOL_ID = S.SCHOOL_ID
WHERE SCHOOL_YEAR = 2019 --AND ADA_ELIGIBLE_IND = 1
GROUP BY S.REGION_ID, S.CITY_CD, S.SCHOOL_ID;

  